# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

permissions:
  contents: read

jobs:
  unittests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install GNURadio
        run: |
          sudo apt-get update
          sudo apt-get install -y gnuradio
          mkdir -p $HOME/.gnuradio/prefs
          sudo chown -R $(id -u):$(id -g) $HOME/.gnuradio/
          echo "gr::vmcircbuf_sysv_shm_factory" > $HOME/.gnuradio/prefs/vmcircbuf_default_factory

      - name: Install pipenv
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python3
          export PIPENV_VENV_IN_PROJECT=1
          pipenv --site-packages

      - name: Install dependencies
        run: |
          pipenv install -r requirements.txt
          pipenv install -r test_requirements.txt

      - name: Run tests
        run: pipenv run python -m unittest discover -v


  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install GNURadio
        run: |
          sudo apt-get update
          sudo apt-get install -y gnuradio
          mkdir -p $HOME/.gnuradio/prefs
          sudo chown -R $(id -u):$(id -g) $HOME/.gnuradio/
          echo "gr::vmcircbuf_sysv_shm_factory" > $HOME/.gnuradio/prefs/vmcircbuf_default_factory

      - name: Install pipenv
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python3
          export PIPENV_VENV_IN_PROJECT=1
          pipenv --site-packages

      - name: Install dependencies
        run: |
          pipenv install -r requirements.txt
          pipenv install -r test_requirements.txt

      - name: Run tests and collect coverage
        continue-on-error: true
        run: pipenv run coverage run --omit=tests/* --source=sats_receiver -m unittest discover -v

      - name: Generate report
        continue-on-error: true
        run: pipenv run coverage xml

      - name: Show report
        continue-on-error: true
        run: pipenv run coverage report -m

      - uses: codecov/codecov-action@v3
